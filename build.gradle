defaultTasks 'full'

ext { 
  resumeBase = 'resume' 
  portfolioBase = 'portfolio' 
}

project.ext {
  rawDirectory = 'raw'
  cookedDirectory = 'cooked'

  resumeLatexFile = resumeBase + '.tex'
  resumePdfFile = resumeBase + '.pdf'

  portfolioLatexFile = portfolioBase + '.tex'
  portfolioPdfFile = portfolioBase + '.pdf'
}

task pdflatexResume1(type: Exec) {
  outputs.upToDateWhen{false}
  workingDir project.rawDirectory 
  standardOutput = new ByteArrayOutputStream() // stops output to STDOUT

  commandLine 'pdflatex', project.resumeBase
}

task pdflatexResume2(type: Exec) {
  outputs.upToDateWhen{false}
  workingDir project.rawDirectory 
  standardOutput = new ByteArrayOutputStream() // stops output to STDOUT

  commandLine 'pdflatex', project.resumeBase
}

task cookResume() {
  dependsOn pdflatexResume1, pdflatexResume2
  doFirst {
    println "Cooking $project.resumeLatexFile in /$project.rawDirectory."
  }

  outputs.file file("$project.rawDirectory/$project.resumePdfFile")

  doLast {
    println "Cooked $project.resumeLatexFile to $project.resumePdfFile."
  }
}

task pdflatexPortfolio1(type: Exec) {
  outputs.upToDateWhen{false}
  workingDir project.rawDirectory 
  standardOutput = new ByteArrayOutputStream() // stops output to STDOUT

  commandLine 'pdflatex', project.portfolioBase
}

task pdflatexPortfolio2(type: Exec) {
  outputs.upToDateWhen{false}
  workingDir project.rawDirectory 
  standardOutput = new ByteArrayOutputStream() // stops output to STDOUT

  commandLine 'pdflatex', project.portfolioBase
}

task cookPortfolio() {
  dependsOn pdflatexPortfolio1, pdflatexPortfolio2
  doFirst {
    println "Cooking $project.portfolioLatexFile in /$project.rawDirectory."
  }

  outputs.file file("$project.rawDirectory/$project.portfolioPdfFile")

  doLast {
    println "Cooked $project.portfolioLatexFile to $project.portfolioPdfFile."
  }
}

task deliverResume(type: Copy) {
  outputs.upToDateWhen{false}

  from cookResume
  into project.cookedDirectory

  doLast {
    println "Delivered $project.resumePdfFile to /$project.cookedDirectory."
  }
}

task deliverPortfolio(type: Copy) {
  outputs.upToDateWhen{false}

  from cookPortfolio
  into project.cookedDirectory

  doLast {
    println "Delivered $project.portfolioPdfFile to /$project.cookedDirectory."
  }
}

task flush(type: Delete) {
  dependsOn deliverResume, deliverPortfolio
  outputs.upToDateWhen{false}

  delete {
    fileTree(dir: project.rawDirectory, excludes: ['**/*.tex', '**/*.cls'])
  } 

  doLast {
    println "Flushed /$project.rawDirectory of temporary $resumeBase and $portfolioBase files."
  }
}

task full {
  dependsOn flush
}
